Index: app/src/main/java/com/example/iotProject/BringUp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.iotProject;\r\n\r\nimport androidx.activity.OnBackPressedCallback;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.bluetooth.BluetoothAdapter;\r\nimport android.bluetooth.BluetoothDevice;\r\nimport android.content.ComponentName;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.ServiceConnection;\r\nimport android.media.AudioManager;\r\nimport android.media.MediaPlayer;\r\nimport android.os.Bundle;\r\nimport android.os.IBinder;\r\nimport android.os.PowerManager;\r\nimport android.text.Spannable;\r\nimport android.text.SpannableStringBuilder;\r\nimport android.text.style.ForegroundColorSpan;\r\nimport android.util.Log;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.chaquo.python.PyObject;\r\nimport com.chaquo.python.Python;\r\nimport com.chaquo.python.android.AndroidPlatform;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.ZoneId;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\npublic class BringUp extends AppCompatActivity implements ServiceConnection, SerialListener {\r\n\r\n\r\n    private enum Connected { False, Pending, True }\r\n    private String deviceAddress;\r\n    private SerialService service;\r\n    private Connected connected = Connected.False;\r\n    private boolean initialStart = true;\r\n\r\n    private boolean inTrain = false, is_up = true;\r\n    private float startTime = -1;\r\n//    private final float[] checkPoints = {12, 17, 25, 30, 37, 42, 48, 56, 59, 64,\r\n//            72, 77, 83, 92, 95, 101, 106, 112, 118, 124, 130, 136, 142, 149,\r\n//            154, 160, 167, 174, 178, 184, 190, 196, 203, 207};\r\n    private final float[][] intervals = new float[][]{{14, 17}, {19, 22}, {25, 28}, {31, 34},\r\n            {37, 40}, {43, 46}, {50, 53}, {61, 64}, {67, 70}, {73, 76},\r\n        {79, 82}, {85, 88}, {97, 100}, {103, 106}, {109, 112}, {115, 118}, {121, 124}, {127, 130}, {133, 136},\r\n        {139, 142}, {145, 148}, {151, 154}, {157, 160}, {163, 166}, {169, 172}, {175, 178}, {181, 184},\r\n        {187, 190}, {193, 196}, {198, 201}\r\n        };\r\n    private int checkIndex = 0, state = 0;\r\n    private final String startText = \"0:00\";\r\n\r\n    private final ArrayList<Float> times = new ArrayList<>();\r\n    private final ArrayList<Float> acc = new ArrayList<>();\r\n    private MediaPlayer player;\r\n    private ProgressBar progressBar;\r\n    private TextView progressTextView;\r\n    private ImageView imageView;\r\n    private PyObject pyModule;\r\n//    private Thread thread;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_bring_up);\r\n        imageView = findViewById(R.id.imageView);\r\n        imageView.setImageResource(R.drawable.pushup);\r\n        deviceAddress = DeviceActivity.deviceAddress;\r\n        Button startButton = findViewById(R.id.startButton);\r\n        startButton.setOnClickListener(view -> startTraining());\r\n        Button stopButton = findViewById(R.id.stopButton);\r\n        stopButton.setOnClickListener(view -> stopTraining(2));\r\n        player = MediaPlayer.create(this, R.raw.bring_sally_up);\r\n        progressBar = findViewById(R.id.progressBar);\r\n        progressBar.setProgress(0);\r\n        progressTextView = findViewById(R.id.progressTextView);\r\n        progressTextView.setText(startText);\r\n        OnBackPressedCallback callback = new OnBackPressedCallback(true) {\r\n            @Override\r\n            public void handleOnBackPressed() {\r\n                stopTraining(2);\r\n            }\r\n        };\r\n        this.getOnBackPressedDispatcher().addCallback(this, callback);\r\n\r\n        if (!Python.isStarted()) {\r\n            Python.start(new AndroidPlatform(getApplicationContext()));\r\n        }\r\n        Python py = Python.getInstance();\r\n        pyModule = py.getModule(\"aux_functions\");\r\n//        thread = new Thread(() -> {\r\n//            while (true) {\r\n//                // TODO change python?\r\n//                if (acc.size() > 10) {\r\n//                    List<PyObject> res = pyModule.callAttr(\"is_up\", times.toArray(), acc.toArray()).asList();\r\n//                    state = res.get(1).toInt();\r\n//                    Log.d(\"checking\", \"reps: \" + res.get(0).toInt() + \" state \" + state);\r\n//                }\r\n//            }\r\n//        });\r\n    }\r\n\r\n    private void writeSession(BSUSession bsuSession){\r\n        FirebaseUser currentUser = FirebaseAuth.getInstance().getCurrentUser();\r\n        if(currentUser!=null){\r\n            String uid = currentUser.getUid();\r\n            DatabaseReference dataBase = FirebaseDatabase.\r\n                    getInstance(\"https://iot-project-e6e76-default-rtdb.europe-west1.firebasedatabase.app/\").\r\n                    getReference(\"bsu_sessions/\"+uid+\"/\"+bsuSession.returnDate());\r\n            dataBase.setValue(bsuSession);\r\n        }\r\n    }\r\n\r\n    private void startTraining(){\r\n        if (!inTrain){\r\n            player = MediaPlayer.create(this, R.raw.bring_sally_up);\r\n            player.setLooping(false);\r\n            player.start();\r\n            initMusicPlayer();\r\n        }\r\n        inTrain = true;\r\n    }\r\n\r\n    @SuppressLint(\"NewApi\")\r\n    private void stopTraining(int reason) {\r\n        // TODO organize\r\n        Date date = Date.from(LocalDateTime.now().atZone(ZoneId.systemDefault()).toInstant());\r\n        // 0: training end, 1: the user wasn't down when he should, 2: the user quited\r\n        if (inTrain){\r\n            inTrain = false;\r\n            player.stop();\r\n            player.release();\r\n            progressTextView.setText(startText);\r\n//            thread.interrupt();\r\n            if (reason == 0){\r\n                float maxAcc = pyModule.callAttr\r\n                        (\"extract_data_bsu\", times.toArray(), acc.toArray()).toFloat();\r\n                BSUSession bsuSession = new BSUSession(times.get(times.size() - 1), maxAcc,\r\n                        date);\r\n                writeSession(bsuSession);\r\n                AlertDialog dialog = new AlertDialog.Builder(BringUp.this)\r\n                        .setTitle(\"Bring Sally Up completed!\")\r\n                        .setMessage(bsuSession.toString())\r\n                        .setPositiveButton(\"Home Screen\", (dialogInterface, i) -> {\r\n                            Intent intent = new Intent(getApplicationContext(), HomeScreen.class);\r\n                            startActivity(intent);\r\n                            finish();\r\n                        })\r\n                        .create();\r\n                dialog.show();\r\n            }\r\n            else{ // TODO maybe split into cases - quit or cheat\r\n                // TODO maybe cancel if we can't check it\r\n                float maxAcc = pyModule.callAttr\r\n                        (\"extract_data_bsu\", times.toArray(), acc.toArray()).toFloat();\r\n                BSUSession bsuSession = new BSUSession(times.get(times.size() - 1), maxAcc,\r\n                        date);\r\n                writeSession(bsuSession);\r\n                AlertDialog dialog = new AlertDialog.Builder(BringUp.this)\r\n                        .setTitle(\"Training isn't complete - good luck in the next time!\")\r\n                        .setMessage(bsuSession.toString())\r\n                        .setPositiveButton(\"Home Screen\", (dialogInterface, i) -> {\r\n                            Intent intent = new Intent(getApplicationContext(), HomeScreen.class);\r\n                            startActivity(intent);\r\n                            finish();\r\n                        })\r\n                        .create();\r\n                dialog.show();\r\n            }\r\n        }\r\n        else {\r\n            Intent intent = new Intent(getApplicationContext(), HomeScreen.class);\r\n            startActivity(intent);\r\n            finish();\r\n        }\r\n    }\r\n\r\n\r\n    private void updateImage() {\r\n        boolean up = false;\r\n        float temp = times.get(times.size() - 1);\r\n        for (float[] interval : intervals) {\r\n            if (interval[0] <= temp && temp <= interval[1]) {\r\n                up = true;\r\n                break;\r\n            }\r\n        }\r\n        if (temp <= 9)\r\n            up = true;\r\n        if (up && !is_up) {\r\n            imageView.setImageResource(R.drawable.pushup);\r\n            is_up = true;\r\n        }\r\n        else if ((!up && is_up)) {\r\n            imageView.setImageResource(R.drawable.pushdown);\r\n            is_up = false;\r\n        }\r\n    }\r\n\r\n\r\n    private void receive(byte[] message) {\r\n        if (!inTrain)\r\n            return;\r\n        String msg = new String(message);\r\n        String[] parts = clean_str(msg);\r\n        if (parts.length <= 0)\r\n            return;\r\n        if (startTime == -1)\r\n            startTime = Float.parseFloat(parts[parts.length - 2]);\r\n//            thread.start();\r\n        float lastTime = Float.parseFloat(parts[parts.length - 2]) - startTime;\r\n        int realTime;\r\n        if (lastTime < 0)\r\n            return;\r\n        String textTime;\r\n        if (lastTime <= 5){\r\n            textTime = Integer.toString(5 - (int)(lastTime));\r\n            progressTextView.setText(textTime);\r\n            return;\r\n        }\r\n        lastTime = Float.parseFloat(parts[parts.length - 2]) - startTime;\r\n        float LENGTH = 60 * 3 + 30;\r\n        if (lastTime > LENGTH) {\r\n            stopTraining(0);\r\n            progressBar.setProgress(100);\r\n            return;\r\n        }\r\n        for (int i = 0; i < parts.length; i+=2) {\r\n            times.add(Float.parseFloat(parts[i]) - startTime);\r\n            float GRAVITY = 9.81f;\r\n            acc.add(Float.parseFloat(parts[i + 1]) - GRAVITY);\r\n        }\r\n        if (times.size() > 10 && checkIndex < intervals.length && intervals[checkIndex][1] <= lastTime){\r\n            boolean up = pyModule.callAttr(\"bsu_up\", times.toArray(), acc.toArray(),\r\n                    intervals[checkIndex][0], intervals[checkIndex][1]).toBoolean();\r\n            checkIndex++;\r\n            if (!up) { // he is down\r\n                stopTraining(1);\r\n                return;\r\n            }\r\n        }\r\n        progressBar.setProgress((int) (100 * (lastTime - 5) / (LENGTH - 5)));\r\n        realTime = (int)(lastTime - 5);\r\n        textTime = (realTime / 60) + \":\" + (realTime % 60);\r\n        progressTextView.setText(textTime);\r\n        updateImage();\r\n    }\r\n\r\n    private String[] clean_str(String msg){\r\n        msg = msg.replace(TextUtil.newline_crlf, TextUtil.emptyString);\r\n        String[] stringsArr = msg.replace(\"  \", \",\").split(\",\");\r\n        int length = stringsArr.length;\r\n        if (length % 2 != 0)\r\n            length--;\r\n        String[] res = new String[length];\r\n        for (int i = 0; i < length; i++)  {\r\n            res[i] = stringsArr[i].replaceAll(\" \",\"\");\r\n        }\r\n        return res;\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onDestroy() {\r\n        if (connected != Connected.False)\r\n            disconnect();\r\n        stopService(new Intent(this, SerialService.class));\r\n        super.onDestroy();\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        if(service != null)\r\n            service.attach(this);\r\n        else {\r\n            startService(new Intent(this, SerialService.class));\r\n            // prevents service destroy on unbind from recreated activity caused by orientation change\r\n            bindService(new Intent(this, SerialService.class), this, Context.BIND_AUTO_CREATE);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        if(service != null && !isChangingConfigurations()) {\r\n            service.detach();\r\n            try {\r\n                unbindService(this);\r\n            } catch (Exception ignored) {\r\n            }\r\n        }\r\n        super.onStop();\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if(initialStart && service != null) {\r\n            initialStart = false;\r\n            runOnUiThread(this::connect);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onServiceConnected(ComponentName name, IBinder binder) {\r\n        service = ((SerialService.SerialBinder) binder).getService();\r\n        service.attach(this);\r\n        if(initialStart) {\r\n            initialStart = false;\r\n            runOnUiThread(this::connect);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onServiceDisconnected(ComponentName name) {\r\n        service = null;\r\n    }\r\n\r\n    @Override\r\n    public void onBindingDied(ComponentName name) {\r\n        ServiceConnection.super.onBindingDied(name);\r\n    }\r\n\r\n    @Override\r\n    public void onNullBinding(ComponentName name) {\r\n        ServiceConnection.super.onNullBinding(name);\r\n    }\r\n\r\n    private void connect() {\r\n        try {\r\n            BluetoothAdapter bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();\r\n            BluetoothDevice device = bluetoothAdapter.getRemoteDevice(deviceAddress);\r\n            status(\"connecting...\");\r\n            connected = Connected.Pending;\r\n            SerialSocket socket = new SerialSocket(getApplicationContext(), device);\r\n            service.connect(socket);\r\n        } catch (Exception e) {\r\n            onSerialConnectError(e);\r\n        }\r\n    }\r\n\r\n    private void disconnect() {\r\n        connected = Connected.False;\r\n        service.disconnect();\r\n    }\r\n\r\n    private void status(String str) {\r\n        SpannableStringBuilder spn = new SpannableStringBuilder(str + '\\n');\r\n        spn.setSpan(new ForegroundColorSpan(getResources().getColor(R.color.colorStatusText)),\r\n                0, spn.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\r\n    }\r\n\r\n    @Override\r\n    public void onSerialConnect() {\r\n        status(\"connected\");\r\n        connected = Connected.True;\r\n    }\r\n\r\n    @Override\r\n    public void onSerialConnectError(Exception e) {\r\n        status(\"connection failed: \" + e.getMessage());\r\n        disconnect();\r\n    }\r\n\r\n    @Override\r\n    public void onSerialRead(byte[] data) {\r\n        try {\r\n            receive(data);}\r\n        catch (Exception e) {\r\n            e.printStackTrace();\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onSerialIoError(Exception e) {}\r\n\r\n    public void initMusicPlayer() {\r\n        player.setWakeMode(getApplicationContext(),\r\n                PowerManager.PARTIAL_WAKE_LOCK);\r\n        player.setAudioStreamType(AudioManager.STREAM_MUSIC);\r\n    }\r\n\r\n    @Override\r\n    public void onPointerCaptureChanged(boolean hasCapture) {\r\n        super.onPointerCaptureChanged(hasCapture);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/iotProject/BringUp.java b/app/src/main/java/com/example/iotProject/BringUp.java
--- a/app/src/main/java/com/example/iotProject/BringUp.java	(revision 57b2248cfab5d13152db5b0761976d785f51f18f)
+++ b/app/src/main/java/com/example/iotProject/BringUp.java	(date 1688455936597)
@@ -55,11 +55,11 @@
 //    private final float[] checkPoints = {12, 17, 25, 30, 37, 42, 48, 56, 59, 64,
 //            72, 77, 83, 92, 95, 101, 106, 112, 118, 124, 130, 136, 142, 149,
 //            154, 160, 167, 174, 178, 184, 190, 196, 203, 207};
-    private final float[][] intervals = new float[][]{{14, 17}, {19, 22}, {25, 28}, {31, 34},
-            {37, 40}, {43, 46}, {50, 53}, {61, 64}, {67, 70}, {73, 76},
-        {79, 82}, {85, 88}, {97, 100}, {103, 106}, {109, 112}, {115, 118}, {121, 124}, {127, 130}, {133, 136},
-        {139, 142}, {145, 148}, {151, 154}, {157, 160}, {163, 166}, {169, 172}, {175, 178}, {181, 184},
-        {187, 190}, {193, 196}, {198, 201}
+    private final float[][] intervals = new float[][]{{14, 16}, {20, 22}, {26, 28}, {32, 34},
+            {38, 40}, {44, 46}, {50, 52}, {61, 63}, {67, 69}, {73, 75},
+        {79, 81}, {85, 87}, {97, 99}, {103, 105}, {109, 111}, {115, 117}, {121, 123}, {127, 129}, {133, 135},
+        {139, 141}, {145, 147}, {151, 153}, {157, 159}, {163, 165}, {169, 171}, {175, 177}, {181, 183},
+        {187, 189}, {193, 195}, {198, 200}
         };
     private int checkIndex = 0, state = 0;
     private final String startText = "0:00";
@@ -244,9 +244,9 @@
             float GRAVITY = 9.81f;
             acc.add(Float.parseFloat(parts[i + 1]) - GRAVITY);
         }
+        updateImage();
         if (times.size() > 10 && checkIndex < intervals.length && intervals[checkIndex][1] <= lastTime){
-            boolean up = pyModule.callAttr("bsu_up", times.toArray(), acc.toArray(),
-                    intervals[checkIndex][0], intervals[checkIndex][1]).toBoolean();
+            boolean up = check_up(intervals[checkIndex][0] - 2, (intervals[checkIndex][1] + 0.5f));
             checkIndex++;
             if (!up) { // he is down
                 stopTraining(1);
@@ -257,7 +257,18 @@
         realTime = (int)(lastTime - 5);
         textTime = (realTime / 60) + ":" + (realTime % 60);
         progressTextView.setText(textTime);
-        updateImage();
+    }
+
+    private boolean check_up(float lower, float upper) {
+        ArrayList<Float> relevantTimes = new ArrayList<>();
+        ArrayList<Float> relevantAcc = new ArrayList<>();
+        for (int i = Math.max(0, times.size() - 1000); i < times.size(); i++) {
+            if (lower <= times.get(i) && times.get(i) <= upper) {
+                relevantTimes.add(times.get(i));
+                relevantAcc.add(acc.get(i));
+            }
+        }
+        return pyModule.callAttr("bsu_is_up", relevantTimes.toArray(), relevantAcc.toArray()).toBoolean();
     }
 
     private String[] clean_str(String msg){
Index: app/src/main/python/aux_functions.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import numpy as np\r\nfrom scipy import interpolate\r\nfrom scipy import signal\r\n\r\ndef is_up(times, acc):  # times >= 0, acc = acc - 9.81\r\n    dist = 3.5\r\n    step = 0.24\r\n    max_height = -1.65\r\n    min_height = 1.6\r\n    if len(times) > len(acc):\r\n        times = times[:-1]\r\n    # data = np.array([times, acc])\r\n    tck = interpolate.splrep(times, acc, s=0)\r\n    xnew = np.arange(times[0], times[-1], step)\r\n    ynew = interpolate.splev(xnew, tck, der=0)\r\n    peaks = signal.find_peaks(ynew, distance=dist, height=max_height)[0]\r\n    bottoms = signal.find_peaks(-ynew, distance=dist, height=min_height)[0]\r\n    steps = 0\r\n    extreme_points = sorted(np.concatenate((peaks, bottoms), axis=None))\r\n    start_point = 0\r\n    while start_point < len(extreme_points) and extreme_points[start_point] in peaks:\r\n        start_point += 1\r\n    i = start_point\r\n    while i <len(extreme_points) - 1:\r\n        if extreme_points[i] in bottoms and extreme_points[i + 1] in peaks:\r\n            if ynew[extreme_points[i]] + 2 < ynew[extreme_points[i + 1]]:\r\n                steps += 1\r\n            else:\r\n                del extreme_points[i + 1]\r\n                i -= 1\r\n        if extreme_points[i] in peaks and extreme_points[i + 1] in bottoms:\r\n            if ynew[extreme_points[i]] - 2 < ynew[extreme_points[i + 1]]:\r\n                del extreme_points[i + 1]\r\n                i -= 1\r\n        i += 1\r\n    if len(extreme_points) > 0 and extreme_points[len(extreme_points) - 1] in bottoms:\r\n        return [steps, 1]\r\n    else:\r\n        return [steps, 0]\r\n\r\n\r\ndef extract_data(times, acc, total_push_ups):\r\n    total_time = times[-1]\r\n    tck = interpolate.splrep(times, acc, s=0)\r\n    xnew = np.arange(times[0], total_time, 0.2)\r\n    ynew = interpolate.splev(xnew, tck, der=0)\r\n    max_acc = max(ynew)\r\n    avg_time_per_push_up = total_push_ups / total_time\r\n    return [max_acc, avg_time_per_push_up]\r\n\r\ndef extract_data_bsu(times, acc):\r\n    total_time = times[-1]\r\n    tck = interpolate.splrep(times, acc, s=0)\r\n    xnew = np.arange(times[0], total_time, 0.2)\r\n    ynew = interpolate.splev(xnew, tck, der=0)\r\n    max_acc = max(ynew)\r\n    return max_acc\r\n\r\ndef bsu_up(times,acc,starting_up,ending_up):\r\n    data = np.array([times, acc]).T\r\n    condition = np.logical_and(starting_up - 2 <= data[:, 0], data[:, 0] < ending_up)\r\n    data_sliced = data[condition]\r\n    tck = interpolate.splrep(data_sliced[:, 0], data_sliced[:, 1], s=0)\r\n    xnew = np.arange(starting_up, ending_up, 0.2)\r\n    ynew = interpolate.splev(xnew, tck, der=0)\r\n    peaks = signal.find_peaks(ynew)[0]\r\n    bottoms = signal.find_peaks(-ynew)[0]\r\n    for peak in peaks:\r\n        for bottom in bottoms:\r\n            if peak < bottom:\r\n                if ynew[peak] > ynew[bottom] + 1:\r\n                    return True\r\n    return False\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/python/aux_functions.py b/app/src/main/python/aux_functions.py
--- a/app/src/main/python/aux_functions.py	(revision 57b2248cfab5d13152db5b0761976d785f51f18f)
+++ b/app/src/main/python/aux_functions.py	(date 1688455725791)
@@ -71,3 +71,16 @@
                 if ynew[peak] > ynew[bottom] + 1:
                     return True
     return False
+
+def bsu_is_up(times, acc):
+    tck = interpolate.splrep(times, acc, s=0)
+    xnew = np.arange(times[0], times[-1], 0.2)
+    ynew = interpolate.splev(xnew, tck, der=0)
+    peaks = signal.find_peaks(ynew)[0]
+    bottoms = signal.find_peaks(-ynew)[0]
+    for peak in peaks:
+        for bottom in bottoms:
+            if peak < bottom:
+                if ynew[peak] > ynew[bottom] + 1:
+                    return True
+    return False
Index: app/src/main/java/com/example/iotProject/HomeScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.iotProject;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.widget.Button;\r\nimport androidx.activity.OnBackPressedCallback;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\n\r\npublic class HomeScreen extends AppCompatActivity {\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        // TODO - check parameters and warnings in all the project and delete comments of code\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home_screen);\r\n        OnBackPressedCallback callback = new OnBackPressedCallback(true) {\r\n            @Override\r\n            public void handleOnBackPressed() {\r\n                buildDialog();\r\n            }\r\n        };\r\n        this.getOnBackPressedDispatcher().addCallback(this, callback);\r\n\r\n        Button signOutButton = findViewById(R.id.goBackButton);\r\n        signOutButton.setOnClickListener(v -> {\r\n            FirebaseAuth.getInstance().signOut();\r\n            Intent intent = new Intent(getApplicationContext(), LogIn.class);\r\n            startActivity(intent);\r\n            finish();\r\n        });\r\n\r\n        Button settingsButton = findViewById(R.id.statsButton);\r\n        settingsButton.setOnClickListener(v -> {\r\n            Intent intent = new Intent(getApplicationContext(), AdvancedStatistics.class);\r\n            startActivity(intent);\r\n            finish();\r\n        });\r\n        Button progressButton = findViewById(R.id.achievementsButton);\r\n        progressButton.setOnClickListener(v -> {\r\n            Intent intent = new Intent(getApplicationContext(), AchievementsScreen.class);\r\n            startActivity(intent);\r\n            finish();\r\n        });\r\n\r\n        Button trainButton = findViewById(R.id.trainButton);\r\n        trainButton.setOnClickListener(v -> {\r\n            Intent intent = new Intent(getApplicationContext(), TrainSettings.class);\r\n            startActivity(intent);\r\n            finish();\r\n        });\r\n\r\n        Button bringUpButton = findViewById(R.id.bringUpButton);\r\n        bringUpButton.setOnClickListener(v -> {\r\n            Intent intent = new Intent(getApplicationContext(), DeviceActivity.class);\r\n            intent.putExtra(\"type\", 1);\r\n            startActivity(intent);\r\n            finish();\r\n        });\r\n    }\r\n\r\n    private void buildDialog() {\r\n        android.app.AlertDialog dialog = new android.app.AlertDialog.Builder(HomeScreen.this)\r\n                .setMessage(\"Sign out?\")\r\n                .setNegativeButton(\"Ok\", (dialog1, which) -> {\r\n                    FirebaseAuth.getInstance().signOut();\r\n                    Intent intent = new Intent(getApplicationContext(), LogIn.class);\r\n                    startActivity(intent);\r\n                    finish();\r\n                })\r\n                .setPositiveButton(\"Cancel\", null)\r\n                .create();\r\n        dialog.show();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/iotProject/HomeScreen.java b/app/src/main/java/com/example/iotProject/HomeScreen.java
--- a/app/src/main/java/com/example/iotProject/HomeScreen.java	(revision 57b2248cfab5d13152db5b0761976d785f51f18f)
+++ b/app/src/main/java/com/example/iotProject/HomeScreen.java	(date 1688452868667)
@@ -10,7 +10,7 @@
 public class HomeScreen extends AppCompatActivity {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
-        // TODO - check parameters and warnings in all the project and delete comments of code
+        // TODO - check parameters and warnings in all the project and delete comments of code, logs
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_home_screen);
         OnBackPressedCallback callback = new OnBackPressedCallback(true) {
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'com.chaquo.python'\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    compileSdkVersion 33\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.iotProject\"\r\n        minSdkVersion 24\r\n        targetSdkVersion 33\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n\r\n        ndk {\r\n            abiFilters \"armeabi-v7a\", \"arm64-v8a\", \"x86\", \"x86_64\"\r\n        }\r\n\r\n        python {\r\n            // eyal: /Users/eyaltadmor/opt/anaconda3/bin/python\r\n            // itamar: C:/Program Files (x86)/Microsoft Visual Studio/Shared/Python37_64/python\r\n            buildPython \"/Users/eyaltadmor/opt/anaconda3/bin/python\"\r\n            pip {\r\n                install \"numpy\"\r\n                install \"scipy\"\r\n            }\r\n        }\r\n\r\n        sourceSets{\r\n            main{\r\n                python.srcDir \"src/main/python\"\r\n            }\r\n        }\r\n        externalNativeBuild {\r\n            cmake {\r\n                cppFlags ''\r\n            }\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation 'androidx.appcompat:appcompat:1.6.1'\r\n    implementation 'com.google.android.material:material:1.9.0'\r\n    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'\r\n    implementation 'com.android.support.constraint:constraint-layout:2.0.4'\r\n    implementation 'com.opencsv:opencsv:4.1'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\r\n    implementation 'com.google.firebase:firebase-auth-ktx:22.0.0'\r\n    implementation 'com.google.firebase:firebase-database:20.2.2'\r\n    implementation 'com.google.firebase:firebase-auth:22.0.0'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 57b2248cfab5d13152db5b0761976d785f51f18f)
+++ b/app/build.gradle	(date 1688451899844)
@@ -23,7 +23,7 @@
         python {
             // eyal: /Users/eyaltadmor/opt/anaconda3/bin/python
             // itamar: C:/Program Files (x86)/Microsoft Visual Studio/Shared/Python37_64/python
-            buildPython "/Users/eyaltadmor/opt/anaconda3/bin/python"
+            buildPython "C:/Program Files (x86)/Microsoft Visual Studio/Shared/Python37_64/python"
             pip {
                 install "numpy"
                 install "scipy"
Index: app/src/main/java/com/example/iotProject/AchievementsScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.iotProject;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport androidx.activity.OnBackPressedCallback;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport org.apache.commons.lang3.text.WordUtils;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.MutableData;\r\nimport com.google.firebase.database.Transaction;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.Date;\r\n\r\npublic class AchievementsScreen extends AppCompatActivity {\r\n    private DatabaseReference dataBase;\r\n    private FirebaseUser currentUser;\r\n    private LinearLayout cardsLayout;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_acheivements);\r\n        cardsLayout = findViewById(R.id.card_layout);\r\n        Button goBackButton = findViewById(R.id.goBackButton);\r\n        goBackButton.setOnClickListener(v -> {\r\n            Intent intent = new Intent(getApplicationContext(), HomeScreen.class);\r\n            startActivity(intent);\r\n            finish();\r\n        });\r\n        OnBackPressedCallback callback = new OnBackPressedCallback(true) {\r\n            @Override\r\n            public void handleOnBackPressed() {\r\n                Intent intent = new Intent(getApplicationContext(), HomeScreen.class);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        };\r\n        this.getOnBackPressedDispatcher().addCallback(this, callback);\r\n        FirebaseAuth mAuth = FirebaseAuth.getInstance();\r\n        currentUser = mAuth.getCurrentUser();\r\n        dataBase = FirebaseDatabase.getInstance(\"https://iot-project-e6e76-default-rtdb.europe-west1.firebasedatabase.app/\").getReference();\r\n        if(currentUser != null){\r\n            updateStreaks();\r\n            DatabaseReference userTrainingReference = dataBase.child(\"achievements\");\r\n            ValueEventListener valueEventListener = new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                    for (DataSnapshot childSnapshot : dataSnapshot.getChildren()) {\r\n                        String achievementName = childSnapshot.getKey();\r\n                        int progress = childSnapshot.child(\"users/\"+currentUser.getUid()).getValue(Integer.class);\r\n                        int cap = childSnapshot.child(\"cap\").getValue(Integer.class);\r\n                        addCard(achievementName, progress, cap);\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(DatabaseError databaseError) {\r\n                    Log.w(\"Firebase\", \"loadPost:onCancelled\", databaseError.toException());\r\n                }\r\n            };\r\n            userTrainingReference.addListenerForSingleValueEvent(valueEventListener);\r\n        }\r\n    }\r\n    private void updateStreaks(){\r\n        ArrayList<TrainingSession> trainingSessions = AdvancedStatistics.getTrainings();\r\n        if(currentUser!=null) {\r\n            String uid = currentUser.getUid();\r\n            int bestStreak = calculateHighestStreak(trainingSessions);\r\n            updateReference(dataBase.child(\"achievements/7-day-streak/users/\"+uid), bestStreak);\r\n            updateReference(dataBase.child(\"achievements/30-day-streak/\"+uid), bestStreak);\r\n        }\r\n    }\r\n\r\n    private void updateReference(DatabaseReference dataBase, int maxStreak){\r\n        dataBase.runTransaction(new Transaction.Handler() {\r\n            @Override\r\n            public Transaction.Result doTransaction(MutableData mutableData) {\r\n                // Get the current value\r\n                Integer currentValue = mutableData.getValue(Integer.class);\r\n                if (currentValue == null) {\r\n                    // Value doesn't exist, set it to 1\r\n                    mutableData.setValue(0);\r\n                } else {\r\n                    if(currentValue<maxStreak){\r\n                        mutableData.setValue(maxStreak);\r\n                    }\r\n                }\r\n\r\n                // Indicate that the transaction completed successfully\r\n                return Transaction.success(mutableData);\r\n            }\r\n\r\n            @Override\r\n            public void onComplete(DatabaseError databaseError, boolean committed, DataSnapshot dataSnapshot) {\r\n                if (databaseError != null) {\r\n                    // Handle the error\r\n                    Log.d(\"Firebase\", \"Transaction failed. Error: \" + databaseError.getMessage());\r\n                } else {\r\n                    // Transaction completed successfully\r\n                    Log.d(\"Firebase\",\"Value incremented successfully\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @SuppressLint(\"NewApi\")\r\n    public int calculateHighestStreak(ArrayList<TrainingSession> trainingSessions) {\r\n        // Sort the trainingSessions by date\r\n        trainingSessions.sort(Comparator.comparing(TrainingSession::reverseDateObject));\r\n\r\n        int highestStreak = 0;\r\n        int currentStreak = 0;\r\n\r\n        Date previousDate = null;\r\n\r\n        for (TrainingSession session : trainingSessions) {\r\n            Date currentDate = session.reverseDateObject();\r\n\r\n            if (previousDate == null || isConsecutiveDays(previousDate, currentDate)) {\r\n                // The current session is part of the streak\r\n                currentStreak++;\r\n            } else {\r\n                // The streak is broken, check if it's the highest streak so far\r\n                highestStreak = Math.max(highestStreak, currentStreak);\r\n                currentStreak = 1;\r\n            }\r\n\r\n            previousDate = currentDate;\r\n        }\r\n\r\n        // Check if the last streak is the highest streak\r\n        highestStreak = Math.max(highestStreak, currentStreak);\r\n\r\n        return highestStreak;\r\n    }\r\n    private boolean isConsecutiveDays(Date previousDate, Date currentDate) {\r\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        String previousDateString = dateFormat.format(previousDate);\r\n        String currentDateString = dateFormat.format(currentDate);\r\n\r\n        long dayDifference = getDayDifference(previousDateString, currentDateString);\r\n\r\n        return dayDifference == 1;\r\n    }\r\n    private long getDayDifference(String startDate, String endDate) {\r\n        try {\r\n            SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n            Date start = dateFormat.parse(startDate);\r\n            Date end = dateFormat.parse(endDate);\r\n\r\n            long difference = end.getTime() - start.getTime();\r\n            return difference / (24 * 60 * 60 * 1000);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return 0;\r\n        }\r\n    }\r\n    private void addCard(String name, int progress, int cap) {\r\n        final View view = getLayoutInflater().inflate(R.layout.achievement_card, null);\r\n\r\n        TextView nameView = view.findViewById(R.id.achievementName);\r\n        ProgressBar progressBar = view.findViewById(R.id.progressBar);\r\n        TextView progressText = view.findViewById(R.id.progressText);\r\n        nameView.setText(WordUtils.capitalize(name.replace(\"-\", \" \")));\r\n        progressBar.setMax(cap);\r\n        progressBar.setProgress(progress);\r\n        String text = Math.min(progress, cap) +\"/\"+cap;\r\n        progressText.setText(text);\r\n        cardsLayout.addView(view);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/iotProject/AchievementsScreen.java b/app/src/main/java/com/example/iotProject/AchievementsScreen.java
--- a/app/src/main/java/com/example/iotProject/AchievementsScreen.java	(revision 57b2248cfab5d13152db5b0761976d785f51f18f)
+++ b/app/src/main/java/com/example/iotProject/AchievementsScreen.java	(date 1688452063965)
@@ -23,7 +23,6 @@
 import com.google.firebase.database.ValueEventListener;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
-import java.util.Collections;
 import java.util.Comparator;
 import java.util.Date;
 
Index: app/src/main/java/com/example/iotProject/AdvancedStatistics.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.iotProject;\r\n\r\n\r\nimport androidx.activity.OnBackPressedCallback;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.SwitchCompat;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\nimport com.github.mikephil.charting.charts.BarChart;\r\nimport com.github.mikephil.charting.charts.LineChart;\r\nimport com.github.mikephil.charting.data.BarData;\r\nimport com.github.mikephil.charting.data.BarDataSet;\r\nimport com.github.mikephil.charting.data.BarEntry;\r\nimport com.github.mikephil.charting.data.Entry;\r\nimport com.github.mikephil.charting.data.LineData;\r\nimport com.github.mikephil.charting.data.LineDataSet;\r\nimport com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Comparator;\r\nimport java.util.Date;\r\n\r\npublic class AdvancedStatistics extends AppCompatActivity {\r\n\r\n    private int mode = 0;\r\n    private ArrayList<TrainingSession> trainings;\r\n    // TODO todo\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_advanced_statistics);\r\n        OnBackPressedCallback callback = new OnBackPressedCallback(true /* enabled by default */) {\r\n            @Override\r\n            public void handleOnBackPressed() {\r\n                Intent intent = new Intent(getApplicationContext(), HomeScreen.class);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        };\r\n        this.getOnBackPressedDispatcher().addCallback(this, callback);\r\n        SwitchCompat switchMode = findViewById(R.id.switchMode);\r\n        switchMode.setOnCheckedChangeListener((buttonView, isChecked) -> {\r\n            if (isChecked) {\r\n                mode = 1;\r\n                switchMode.setText(R.string.push_up_training);\r\n                // Switch is in the \"on\" or \"checked\" position\r\n                // Perform actions for the \"on\" state\r\n            } else {\r\n                mode = 0;\r\n                switchMode.setText(R.string.bsu_training);\r\n                // Switch is in the \"off\" or \"unchecked\" position\r\n                // Perform actions for the \"off\" state\r\n            }\r\n        });\r\n        switchMode.setChecked(true);\r\n        trainings = getTrainings();\r\n        new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                try {\r\n                    synchronized (this){\r\n                        wait(2000);\r\n                        setAmountPushUp();\r\n                        setTrainingsTime();\r\n                        setSpeed();\r\n                        setPowerPushUp();\r\n                        setPushTime();\r\n                    }\r\n                } catch (InterruptedException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n            }\r\n        }).start();\r\n    }\r\n\r\n    public void setAmountPushUp(){\r\n        LineChart amountLineChart = (LineChart) findViewById(R.id.lineChartAmount);\r\n        ArrayList<Entry> amounts = new ArrayList<>();\r\n        int i = 1;\r\n        for (TrainingSession ts: trainings){\r\n            amounts.add(new Entry(i, ts.totalPushUps));\r\n            i++;\r\n        }\r\n        LineDataSet amountDataSet =  new LineDataSet(amounts, \"Number Of Push Ups\");\r\n        amountDataSet.setColor(Color.RED);\r\n        amountDataSet.setCircleColor(Color.RED);\r\n        ArrayList<ILineDataSet> amountDataSets = new ArrayList<>();\r\n        amountDataSets.add(amountDataSet);\r\n        LineData amountData = new LineData(amountDataSets);\r\n        amountLineChart.getDescription().setEnabled(false);\r\n        amountLineChart.getLegend().setEnabled(false);\r\n        amountLineChart.setData(amountData);\r\n        amountLineChart.invalidate();\r\n    }\r\n    public void setPowerPushUp(){\r\n        LineChart amountLineChart = (LineChart) findViewById(R.id.lineChartPower);\r\n        ArrayList<Entry> amounts = new ArrayList<>();\r\n        int i = 1;\r\n        for (TrainingSession ts: trainings){\r\n            amounts.add(new Entry((float) i, (float) ts.explosiveness));\r\n            i++;\r\n        }\r\n        LineDataSet amountDataSet =  new LineDataSet(amounts, \"Number Of Push Ups\");\r\n        amountDataSet.setColor(Color.RED);\r\n        amountDataSet.setCircleColor(Color.RED);\r\n        ArrayList<ILineDataSet> amountDataSets = new ArrayList<>();\r\n        amountDataSets.add(amountDataSet);\r\n        LineData amountData = new LineData(amountDataSets);\r\n        amountLineChart.getDescription().setEnabled(false);\r\n        amountLineChart.getLegend().setEnabled(false);\r\n        amountLineChart.setData(amountData);\r\n        amountLineChart.invalidate();\r\n    }\r\n    public void setPushTime(){\r\n        LineChart amountLineChart = (LineChart) findViewById(R.id.scatterChartPushTime);\r\n        ArrayList<Entry> amounts = new ArrayList<>();\r\n        int i = 1;\r\n        for (TrainingSession ts: trainings){\r\n            amounts.add(new Entry((float) i, (float) ts.avgPushUpTime));\r\n            i++;\r\n        }\r\n        LineDataSet amountDataSet =  new LineDataSet(amounts, \"Number Of Push Ups\");\r\n        amountDataSet.setColor(Color.RED);\r\n        amountDataSet.setCircleColor(Color.RED);\r\n        ArrayList<ILineDataSet> amountDataSets = new ArrayList<>();\r\n        amountDataSets.add(amountDataSet);\r\n        LineData amountData = new LineData(amountDataSets);\r\n        amountLineChart.getDescription().setEnabled(false);\r\n        amountLineChart.getLegend().setEnabled(false);\r\n        amountLineChart.setData(amountData);\r\n        amountLineChart.invalidate();\r\n    }\r\n    public void setSpeed(){\r\n        LineChart amountLineChart = (LineChart) findViewById(R.id.barChartPushSpeed);\r\n        ArrayList<Entry> amounts = new ArrayList<>();\r\n        int i = 1;\r\n        for (TrainingSession ts: trainings){\r\n            amounts.add(new Entry((float) i, (float) (ts.totalPushUps/ts.avgPushUpTime)));\r\n            i++;\r\n        }\r\n        LineDataSet amountDataSet =  new LineDataSet(amounts, \"Number Of Push Ups\");\r\n        amountDataSet.setColor(Color.RED);\r\n        amountDataSet.setCircleColor(Color.RED);\r\n        ArrayList<ILineDataSet> amountDataSets = new ArrayList<>();\r\n        amountDataSets.add(amountDataSet);\r\n        LineData amountData = new LineData(amountDataSets);\r\n        amountLineChart.getDescription().setEnabled(false);\r\n        amountLineChart.getLegend().setEnabled(false);\r\n        amountLineChart.setData(amountData);\r\n        amountLineChart.invalidate();\r\n    }\r\n\r\n    private void setTrainingsTime(){\r\n        BarChart trainingTimeChart = (BarChart) findViewById(R.id.barChartTrainingsTime);\r\n        ArrayList<BarEntry> hours = new ArrayList<>();\r\n        Date temp;\r\n        for (TrainingSession ts: trainings){\r\n            temp = TrainingSession.reverseHash(ts.returnDate());\r\n            Calendar calendar = Calendar.getInstance();\r\n            calendar.setTime(temp);\r\n            hours.add(new BarEntry(calendar.get(Calendar.HOUR_OF_DAY), 1));\r\n        }\r\n        BarDataSet hoursDataSet =  new BarDataSet(hours, \"Hours of trainings\");\r\n        hoursDataSet.setColor(Color.BLUE);\r\n//        ArrayList<ILineDataSet> hourDataSets = new ArrayList<>();\r\n//        hourDataSets.add(hoursDataSet);\r\n        BarData timeData = new BarData();\r\n        timeData.addDataSet(hoursDataSet);\r\n        trainingTimeChart.getDescription().setEnabled(false);\r\n        trainingTimeChart.getLegend().setEnabled(false);\r\n        trainingTimeChart.setData(timeData);\r\n        trainingTimeChart.invalidate();\r\n    }\r\n\r\n\r\n    public static ArrayList<TrainingSession> getTrainings() {\r\n        FirebaseUser currentUser = FirebaseAuth.getInstance().getCurrentUser();\r\n        ArrayList<TrainingSession> result = new ArrayList<TrainingSession>();\r\n        if (currentUser != null) {\r\n            String uid = currentUser.getUid();\r\n            DatabaseReference dataBase = FirebaseDatabase.\r\n                    getInstance(\"https://iot-project-e6e76-default-rtdb.europe-west1.firebasedatabase.app/\").\r\n                    getReference(\"training_sessions/\" + uid);\r\n\r\n            dataBase.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                    for (DataSnapshot childSnapshot : dataSnapshot.getChildren()) {\r\n                        String date = String.valueOf(childSnapshot.getKey());\r\n                        TrainingSession current = childSnapshot.getValue(TrainingSession.class);\r\n                        Log.d(\"Firebase\", \"onDataChange: \" + current.avgPushUpTime);\r\n                        current.setDate(date);\r\n                        result.add(current);\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(DatabaseError error) {\r\n                    Log.w(\"Firebase\", \"loadPost:onCancelled\", error.toException());\r\n                }\r\n            });\r\n        }\r\n        Log.d(\"Firebase\", \"training length: \" + result.size());\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\r\n            result.sort(Comparator.comparing(TrainingSession::reverseDateObject));\r\n        }\r\n        return result;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/iotProject/AdvancedStatistics.java b/app/src/main/java/com/example/iotProject/AdvancedStatistics.java
--- a/app/src/main/java/com/example/iotProject/AdvancedStatistics.java	(revision 57b2248cfab5d13152db5b0761976d785f51f18f)
+++ b/app/src/main/java/com/example/iotProject/AdvancedStatistics.java	(date 1688452868679)
@@ -47,7 +47,7 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_advanced_statistics);
-        OnBackPressedCallback callback = new OnBackPressedCallback(true /* enabled by default */) {
+        OnBackPressedCallback callback = new OnBackPressedCallback(true) {
             @Override
             public void handleOnBackPressed() {
                 Intent intent = new Intent(getApplicationContext(), HomeScreen.class);
@@ -92,7 +92,7 @@
     }
 
     public void setAmountPushUp(){
-        LineChart amountLineChart = (LineChart) findViewById(R.id.lineChartAmount);
+        LineChart amountLineChart = findViewById(R.id.lineChartAmount);
         ArrayList<Entry> amounts = new ArrayList<>();
         int i = 1;
         for (TrainingSession ts: trainings){
@@ -111,7 +111,7 @@
         amountLineChart.invalidate();
     }
     public void setPowerPushUp(){
-        LineChart amountLineChart = (LineChart) findViewById(R.id.lineChartPower);
+        LineChart amountLineChart = findViewById(R.id.lineChartPower);
         ArrayList<Entry> amounts = new ArrayList<>();
         int i = 1;
         for (TrainingSession ts: trainings){
@@ -130,7 +130,7 @@
         amountLineChart.invalidate();
     }
     public void setPushTime(){
-        LineChart amountLineChart = (LineChart) findViewById(R.id.scatterChartPushTime);
+        LineChart amountLineChart = findViewById(R.id.scatterChartPushTime);
         ArrayList<Entry> amounts = new ArrayList<>();
         int i = 1;
         for (TrainingSession ts: trainings){
@@ -169,7 +169,7 @@
     }
 
     private void setTrainingsTime(){
-        BarChart trainingTimeChart = (BarChart) findViewById(R.id.barChartTrainingsTime);
+        BarChart trainingTimeChart = findViewById(R.id.barChartTrainingsTime);
         ArrayList<BarEntry> hours = new ArrayList<>();
         Date temp;
         for (TrainingSession ts: trainings){
@@ -193,7 +193,7 @@
 
     public static ArrayList<TrainingSession> getTrainings() {
         FirebaseUser currentUser = FirebaseAuth.getInstance().getCurrentUser();
-        ArrayList<TrainingSession> result = new ArrayList<TrainingSession>();
+        ArrayList<TrainingSession> result = new ArrayList<>();
         if (currentUser != null) {
             String uid = currentUser.getUid();
             DatabaseReference dataBase = FirebaseDatabase.
@@ -206,7 +206,6 @@
                     for (DataSnapshot childSnapshot : dataSnapshot.getChildren()) {
                         String date = String.valueOf(childSnapshot.getKey());
                         TrainingSession current = childSnapshot.getValue(TrainingSession.class);
-                        Log.d("Firebase", "onDataChange: " + current.avgPushUpTime);
                         current.setDate(date);
                         result.add(current);
                     }
