Index: app/src/main/java/com/example/iotProject/AdvancedStatistics.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.iotProject;\r\n\r\n\r\nimport androidx.activity.OnBackPressedCallback;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.SwitchCompat;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\nimport com.github.mikephil.charting.charts.BarChart;\r\nimport com.github.mikephil.charting.charts.LineChart;\r\nimport com.github.mikephil.charting.data.BarData;\r\nimport com.github.mikephil.charting.data.BarDataSet;\r\nimport com.github.mikephil.charting.data.BarEntry;\r\nimport com.github.mikephil.charting.data.Entry;\r\nimport com.github.mikephil.charting.data.LineData;\r\nimport com.github.mikephil.charting.data.LineDataSet;\r\nimport com.github.mikephil.charting.interfaces.datasets.ILineDataSet;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Comparator;\r\nimport java.util.Date;\r\n\r\npublic class AdvancedStatistics extends AppCompatActivity {\r\n\r\n    private int mode = 0;\r\n    private final ArrayList<TrainingSession> trainings = getTrainings();\r\n    // TODO todo\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_advanced_statistics);\r\n        OnBackPressedCallback callback = new OnBackPressedCallback(true /* enabled by default */) {\r\n            @Override\r\n            public void handleOnBackPressed() {\r\n                Intent intent = new Intent(getApplicationContext(), HomeScreen.class);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        };\r\n        this.getOnBackPressedDispatcher().addCallback(this, callback);\r\n        SwitchCompat switchMode = findViewById(R.id.switchMode);\r\n        switchMode.setOnCheckedChangeListener((buttonView, isChecked) -> {\r\n            if (isChecked) {\r\n                mode = 1;\r\n                switchMode.setText(R.string.push_up_training);\r\n                // Switch is in the \"on\" or \"checked\" position\r\n                // Perform actions for the \"on\" state\r\n            } else {\r\n                mode = 0;\r\n                switchMode.setText(R.string.bsu_training);\r\n                // Switch is in the \"off\" or \"unchecked\" position\r\n                // Perform actions for the \"off\" state\r\n            }\r\n        });\r\n        switchMode.setChecked(true);\r\n    }\r\n\r\n    private void setAmountPushUp(){\r\n        LineChart amountLineChart = (LineChart) findViewById(R.id.lineChartAmount);\r\n        ArrayList<Entry> amounts = new ArrayList<>();\r\n        int i = 0;\r\n        for (TrainingSession ts: trainings){\r\n            amounts.add(new Entry(i, ts.totalPushUps));\r\n            i++;\r\n        }\r\n        LineDataSet amountDataSet =  new LineDataSet(amounts, \"Number Of Push Ups\");\r\n        amountDataSet.setColor(Color.RED);\r\n        amountDataSet.setCircleColor(Color.RED);\r\n        ArrayList<ILineDataSet> amountDataSets = new ArrayList<>();\r\n        amountDataSets.add(amountDataSet);\r\n        LineData amountData = new LineData(amountDataSets);\r\n        amountLineChart.getDescription().setEnabled(false);\r\n        amountLineChart.getLegend().setEnabled(false);\r\n        amountLineChart.setData(amountData);\r\n        amountLineChart.invalidate();\r\n    }\r\n\r\n    private void setTrainingsTime(){\r\n        BarChart trainingTimeChart = (BarChart) findViewById(R.id.barChartTrainingsTime);\r\n        ArrayList<BarEntry> hours = new ArrayList<>();\r\n        Date temp;\r\n        for (TrainingSession ts: trainings){\r\n            temp = TrainingSession.reverseHash(ts.returnDate());\r\n            Calendar calendar = Calendar.getInstance();\r\n            calendar.setTime(temp);\r\n            hours.add(new BarEntry(calendar.get(Calendar.HOUR_OF_DAY), 1));\r\n        }\r\n        BarDataSet hoursDataSet =  new BarDataSet(hours, \"Hours of trainings\");\r\n        hoursDataSet.setColor(Color.BLUE);\r\n//        ArrayList<ILineDataSet> hourDataSets = new ArrayList<>();\r\n//        hourDataSets.add(hoursDataSet);\r\n        BarData timeData = new BarData();\r\n        timeData.addDataSet(hoursDataSet);\r\n        trainingTimeChart.getDescription().setEnabled(false);\r\n        trainingTimeChart.getLegend().setEnabled(false);\r\n        trainingTimeChart.setData(timeData);\r\n        trainingTimeChart.invalidate();\r\n    }\r\n\r\n\r\n    public static ArrayList<TrainingSession> getTrainings() {\r\n        FirebaseUser currentUser = FirebaseAuth.getInstance().getCurrentUser();\r\n        ArrayList<TrainingSession> result = new ArrayList<TrainingSession>();\r\n        if (currentUser != null) {\r\n            String uid = currentUser.getUid();\r\n            DatabaseReference dataBase = FirebaseDatabase.\r\n                    getInstance(\"https://iot-project-e6e76-default-rtdb.europe-west1.firebasedatabase.app/\").\r\n                    getReference(\"training_sessions/\" + uid);\r\n            dataBase.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                    for (DataSnapshot childSnapshot : dataSnapshot.getChildren()) {\r\n                        String date = String.valueOf(childSnapshot.getKey());\r\n                        TrainingSession current = childSnapshot.getValue(TrainingSession.class);\r\n                        Log.d(\"Firebase\", \"onDataChange: \" + current.avgPushUpTime);\r\n                        current.setDate(date);\r\n                        result.add(current);\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(DatabaseError error) {\r\n                    Log.w(\"Firebase\", \"loadPost:onCancelled\", error.toException());\r\n                }\r\n            });\r\n        }\r\n        Log.d(\"Firebase\", \"training length: \" + result.size());\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\r\n            result.sort(Comparator.comparing(TrainingSession::reverseDateObject));\r\n        }\r\n        return result;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/iotProject/AdvancedStatistics.java b/app/src/main/java/com/example/iotProject/AdvancedStatistics.java
--- a/app/src/main/java/com/example/iotProject/AdvancedStatistics.java	(revision 38ba3653a96cd2917d9939b77161112f6c82029e)
+++ b/app/src/main/java/com/example/iotProject/AdvancedStatistics.java	(date 1688451754245)
@@ -47,7 +47,7 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_advanced_statistics);
-        OnBackPressedCallback callback = new OnBackPressedCallback(true /* enabled by default */) {
+        OnBackPressedCallback callback = new OnBackPressedCallback(true) {
             @Override
             public void handleOnBackPressed() {
                 Intent intent = new Intent(getApplicationContext(), HomeScreen.class);
